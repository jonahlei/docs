{
    "openapi": "3.1.0",
    "info": {
        "title": "火山方舟",
        "description": "本文介绍Doubao API的输入输出参数，帮助您使用接口调用模型服务。",
        "version": "1.0.0"
    },
    "paths": {
        "/bots/chat/completions": {
            "post": {
                "summary": "Doubao应用API的聊天完成接口",
                "description": "使用该接口进行聊天完成操作，支持流式和非流式响应。",
                "requestBody": {
                    "description": "请求体参数",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/NonStreamResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StreamResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "ApiKey",
                "description": "本接口支持API Key鉴权方式，详见[签名鉴权方式](https://www.volcengine.com/docs/82379/1298459)。如果您需要使用Access Key来调用，可以使用接口来获取临时API Key，详细接口说明请参见[GetApiKey - 获取临时API](https://www.volcengine.com/docs/82379/1262825)。"
            }
        },
        "schemas": {
            "ChatCompletionsRequest": {
                "type": "object",
                "required": [
                    "model",
                    "messages"
                ],
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "您创建的[智能体](https://www.volcengine.com/docs/82379/1267885) ID",
                        "example": "bot-202406040*****-*****"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageParam"
                        },
                        "description": "由目前为止的对话组成的消息列表。当指定了 `tools` 参数以使用模型的 function call 能力时，请确保 `messages` 列表内的消息满足如下要求：\n- 如果 message 列表中前文出现了带有 n 个 `tool_calls` 的 Assistant Message，则后文必须有连续 n 个分别和每个 `tool_call_id` 相对应的 Tool Message，来回应 `tool_calls` 的信息要求。"
                    },
                    "stream": {
                        "type": "boolean",
                        "default": false,
                        "description": "响应内容是否流式返回：\n- `false`：模型生成完所有内容后一次性返回结果\n- `true`：按 SSE 协议逐块返回模型生成内容，并以一条 `data: [DONE]` 消息结束",
                        "example": false
                    },
                    "stream_options": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StreamOptionsParam"
                            }
                        ],
                        "description": "流式响应的选项。仅当 `stream: true` 时可以设置 `stream_options` 参数。"
                    },
                    "max_tokens": {
                        "type": "integer",
                        "default": 4096,
                        "description": "模型可以生成的最大 token 数量。输入 token 和输出 token 的总长度还受模型的上下文长度限制。具体取值范围，取决于配置的模型支持的长度，具体请参见[模型列表](https://www.volcengine.com/docs/82379/1330310)。",
                        "example": 4096
                    },
                    "stop": {
                        "oneOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "模型遇到 `stop` 字段所指定的字符串时将停止继续生成，这个词语本身不会输出。最多支持 4 个字符串。",
                        "example": [
                            "你好",
                            "天气"
                        ]
                    },
                    "frequency_penalty": {
                        "type": "number",
                        "format": "float",
                        "default": 0,
                        "description": "频率惩罚系数。如果值为正，会根据新 token 在文本中的出现频率对其进行惩罚，从而降低模型逐字重复的可能性。取值范围为 [-2.0, 2.0]。",
                        "example": 1
                    },
                    "temperature": {
                        "type": "number",
                        "format": "float",
                        "default": 1,
                        "description": "采样温度。控制了生成文本时对每个候选词的概率分布进行平滑的程度。取值范围为 [0, 1]。0 特殊处理。较高的值（如 0.8）会使输出更加随机，而较低的值（如 0.2）会使输出更加集中确定。通常建议仅调整 `temperature` 或 `top_p` 其中之一，不建议两者都修改。",
                        "example": 0.8
                    },
                    "top_p": {
                        "type": "number",
                        "format": "float",
                        "default": 0.7,
                        "description": "核采样概率阈值。模型会考虑概率质量在 `top_p` 内的 token 结果。取值范围为 [0, 1]。如 0.1 意味着只考虑概率质量最高的前 10% 的 token，取值越大生成的随机性越高，取值越低生成的确定性越高。通常建议仅调整 `temperature` 或 `top_p` 其中之一，不建议两者都修改。",
                        "example": 0.8
                    },
                    "logprobs": {
                        "type": "boolean",
                        "default": false,
                        "description": "是否返回输出 tokens 的对数概率：\n- `false`：不返回对数概率信息\n- `true`：返回消息内容中每个输出 token 的对数概率",
                        "example": false
                    },
                    "top_logprobs": {
                        "type": "integer",
                        "default": 0,
                        "description": "指定每个输出 token 位置最有可能返回的 token 数量，每个 token 都有关联的对数概率。仅当 `logprobs: true` 时可以设置 `top_logprobs` 参数，取值范围为 [0, 20]。",
                        "example": 2
                    },
                    "logit_bias": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "description": "调整指定 token 在模型输出内容中出现的概率，使模型生成的内容更加符合特定的偏好。`logit_bias` 字段接受一个 map 值，其中每个键为词表中的 token ID，每个值为该 token 的偏差值，取值范围为 [-100, 100]。-1 会减少选择的可能性，1 会增加选择的可能性；-100 会完全禁止选择该 token，100 会导致仅可选择该 token。该参数的实际效果可能因模型而异。",
                        "example": {
                            "1234": -100
                        }
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToolParam"
                        },
                        "description": "模型可以调用的工具列表。目前，仅函数作为工具被支持。用这个来提供模型可能为其生成 JSON 输入的函数列表。"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metadata"
                            }
                        ],
                        "description": "额外参数"
                    }
                }
            },
            "MessageParam": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "发出该消息的对话参与者角色，可选值包括：\n- `system`：System Message 系统消息\n- `user`：User Message 用户消息\n- `assistant`：Assistant Message 对话助手消息\n- `tool`：Tool Message 工具调用消息",
                        "example": "user"
                    },
                    "name": {
                        "type": "string",
                        "description": "仅在群聊模式下生效，标记此条信息是哪个角色的发言，应当和配置中的角色名称保持一致",
                        "example": "孙悟空"
                    },
                    "content": {
                        "type": "string",
                        "description": "消息内容：\n- 当 `role` 为 `system`、`user`、`tool`时，参数必填\n- 当 `role` 为 `assistant` 时，`content` 与 `tool_calls` 参数二者至少填其一",
                        "example": "世界第一高山是什么？"
                    },
                    "tool_calls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageToolCallParam"
                        },
                        "description": "模型生成的工具调用。当 `role` 为 `assistant` 时，`content` 与 `tool_calls` 参数二者至少填其一"
                    },
                    "tool_call_id": {
                        "type": "string",
                        "description": "此消息所回应的工具调用 ID，当 `role` 为 `tool` 时必填",
                        "example": "call_5y**********************"
                    }
                }
            },
            "MessageToolCallParam": {
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "function"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "当前工具调用 ID",
                        "example": "call_5y**********************"
                    },
                    "type": {
                        "type": "string",
                        "description": "工具类型，当前仅支持`function`",
                        "example": "function"
                    },
                    "function": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FunctionParam"
                            }
                        ],
                        "description": "模型需要调用的函数"
                    }
                }
            },
            "FunctionParam": {
                "type": "object",
                "required": [
                    "name",
                    "arguments"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "模型需要调用的函数名称",
                        "example": "get_current_weather"
                    },
                    "arguments": {
                        "type": "string",
                        "description": "模型生成的用于调用函数的参数，JSON 格式。请注意，模型并不总是生成有效的 JSON，并且可能会虚构出一些您的函数参数规范中未定义的参数。在调用函数之前，请在您的代码中验证这些参数是否有效。",
                        "example": "{\"location\": \"Boston, MA\"}"
                    }
                }
            },
            "ToolParam": {
                "type": "object",
                "required": [
                    "type",
                    "function"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "工具类型，当前仅支持 `function`",
                        "example": "function"
                    },
                    "function": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FunctionDefinition"
                            }
                        ],
                        "description": "模型可以调用的工具列表。"
                    }
                }
            },
            "FunctionDefinition": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "函数的名称",
                        "example": "get_current_weather"
                    },
                    "description": {
                        "type": "string",
                        "description": "对函数用途的描述，供模型判断何时以及如何调用该工具函数",
                        "example": "获取指定城市的天气信息"
                    },
                    "parameters": {
                        "type": "object",
                        "description": "函数请求参数，以 JSON Schema 格式描述。具体格式请参考 [JSON Schema](https://json-schema.org/understanding-json-schema) 文档",
                        "example": {
                            "type": "object",
                            "properties": {
                                "location": {
                                    "type": "string",
                                    "description": "城市，如：北京"
                                }
                            },
                            "required": [
                                "location"
                            ]
                        }
                    }
                }
            },
            "StreamOptionsParam": {
                "type": "object",
                "properties": {
                    "include_usage": {
                        "type": "boolean",
                        "default": false,
                        "description": "是否包含本次请求的 token 用量统计信息：\n- `false`：不返回 token 用量信息\n- `true`：在 `data: [DONE]` 消息之前返回一个额外的块，此块上的 `bot_usage` 字段代表整个请求的 token 用量，`choices` 字段为空数组。所有其他块也将包含 `bot_usage` 字段，但值为 `null`。",
                        "example": false
                    }
                }
            },
            "Metadata": {
                "type": "object",
                "properties": {
                    "user_info": {
                        "type": "string",
                        "description": "可以被反序列化成 json 的字符串，需要包含 `city` 和 `district` 两个字段",
                        "example": "{\"city\":\"北京\",\"district\":\"海淀区\"}"
                    },
                    "emit_intention_signal_extra": {
                        "type": "string",
                        "default": "false",
                        "description": "值是 \"true\" 时，会中途返回intention状态 \"正在搜索\""
                    },
                    "target_character_name": {
                        "type": "string",
                        "description": "群聊Bot对话时填写，指定本次要发言的角色名，必须是存在于`characters`里的角色"
                    },
                    "group_chat_config": {
                         "type": "object",
                        "description": "运行时动态传入的角色配置，包含参数`characters`、`description`、`user_name`：\n- `characters`：array类型的群聊角色列表，需要填写：\n  - `name`：群聊角色名称\n  - `system_prompt`：群聊角色设定，用于告知应用需要扮演的角色\n  - `model_desc.endpoint_id`：您创建的[推理接入点](https://www.volcengine.com/docs/82379/1099522)ID\n  注：单次请求传入的角色上限为50个\n- `description`：非必填，群聊场景描述，可设定群聊的主题、时间地点、事件场景、用户扮演的角色等信息\n- `user_name:` 非必填，表示“我”所扮演的角色名称 ，默认值为“用户”",
                        "example": {
                            "characters": [
                                {
                                    "name": "孙悟空",
                                    "system_prompt": "降妖除魔的大师兄",
                                    "model_desc": {
                                        "endpoint_id": "{your endpoint id}"
                                    }
                                },
                                {
                                    "name": "猪八戒",
                                    "system_prompt": "天蓬元帅下凡",
                                    "model_desc": {
                                        "endpoint_id": "{your endpoint id}"
                                    }
                                }
                            ],
                            "description": "西天取经之路",
                            "user_name": "唐僧"
                        },
                        "properties": {
                            "characters": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "群聊角色名称"
                                        },
                                        "system_prompt": {
                                            "type": "string",
                                            "description": "群聊角色设定，用于告知应用需要扮演的角色"
                                        },
                                        "model_desc": {
                                            "type": "object",
                                            "properties": {
                                                "endpoint_id": {
                                                    "type": "string",
                                                    "description": "您创建的[推理接入点](https://www.volcengine.com/docs/82379/1099522)ID"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "description": {
                                "type": "string",
                                "description": "非必填，群聊场景描述，可设定群聊的主题、时间地点、事件场景、用户扮演的角色等信息"
                            },
                            "user_name": {
                                "type": "string",
                                "description": "非必填，表示“我”所扮演的角色名称 ，默认值为“用户”"
                            }
                        }
                    }
                }
            },
            "NonStreamResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "本次请求的唯一标识",
                        "example": "021718049470528d92fcbe0865fdffdde********************"
                    },
                    "model": {
                        "type": "string",
                        "description": "本次请求实际使用的模型名称和版本。Doubao 1.5 代模型的模型名称格式为 doubao-1-5-**，如调用部署doubao-1.5-pro-32k 250115模型的推理接入点，返回`model`字段信息doubao-1-5-pro-32k-250115。",
                        "example": "doubao-pro-32k-241215"
                    },
                    "created": {
                        "type": "integer",
                        "description": "本次请求创建时间的 Unix 时间戳（秒）",
                        "example": 1718049470
                    },
                    "object": {
                        "type": "string",
                        "description": "固定为 `chat.completion`",
                        "example": "chat.completion"
                    },
                    "choices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Choice"
                        },
                        "description": "本次请求的模型输出内容"
                    },
                    "bot_usage": {
                        "$ref": "#/components/schemas/BotUsage",
                        "description": "本次请求的 tokens 和插件消耗"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "description": "不同的结构体详见插件文档：\n- [联网插件](https://www.volcengine.com/docs/82379/1285209)\n- [知识库插件](https://www.volcengine.com/docs/82379/1285210)"
                        },
                        "description": "知识库/联网的引用结果，表示调用插件的返回值，首chunk返回"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata",
                        "description": "请求时附带的额外参数信息"
                    }
                }
            },
            "StreamResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "本次请求的唯一标识",
                        "example": "021718049470528d92fcbe0865fdffdde********************"
                    },
                    "model": {
                        "type": "string",
                        "description": "本次请求实际使用的模型名称和版本。Doubao 1.5 代模型的模型名称格式为 doubao-1-5-**，如调用部署doubao-1.5-pro-32k 250115模型的推理接入点，返回`model`字段信息doubao-1-5-pro-32k-250115。",
                        "example": "doubao-pro-32k-241215"
                    },
                    "created": {
                        "type": "integer",
                        "description": "本次请求创建时间的 Unix 时间戳（秒）",
                        "example": 1718049470
                    },
                    "object": {
                        "type": "string",
                        "description": "固定为 `chat.completion.chunk`",
                        "example": "chat.completion.chunk"
                    },
                    "choices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamChoice"
                        },
                        "description": "本次请求的模型输出内容"
                    },
                    "bot_usage": {
                        "$ref": "#/components/schemas/BotUsage",
                        "description": "本次请求的 tokens 和插件消耗"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "description": "不同的结构体详见插件文档：\n- [联网插件](https://www.volcengine.com/docs/82379/1285209)\n- [知识库插件](https://www.volcengine.com/docs/82379/1285210)"
                        },
                        "description": "知识库/联网的引用结果，表示调用插件的返回值，首chunk返回"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata",
                        "description": "额外参数"
                    }
                }
            },
            "Choice": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "description": "当前元素在 `choices` 列表的索引",
                        "example": 0
                    },
                    "finish_reason": {
                        "type": "string",
                        "description": "模型停止生成 token 的原因。可能的值包括：\n- `stop`：模型输出自然结束，或因命中请求参数 `stop` 中指定的字段而被截断\n- `length`：模型输出因达到请求参数 `max_token` 指定的最大 token 数量而被截断\n- `content_filter`：模型输出被内容审核拦截\n- `tool_call`：模型调用了工具",
                        "example": "stop"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message",
                        "description": "模型输出的内容"
                    },
                    "logprobs": {
                        "$ref": "#/components/schemas/ChoiceLogprobs",
                        "description": "当前内容的对数概率信息"
                    }
                }
            },
            "Message": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "固定为 `assistant`",
                        "example": "assistant"
                    },
                    "content": {
                        "type": "string",
                        "description": "模型生成的消息内容，`content` 与 `tool_calls` 字段二者至少有一个为非空",
                        "example": "\"你好\""
                    },
                    "tool_calls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageToolCall"
                        },
                        "description": "模型生成的工具调用，`content` 与 `tool_calls` 字段二者至少有一个为非空"
                    }
                }
            },
            "MessageToolCall": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "当前工具调用 ID",
                        "example": "call_5y**********************"
                    },
                    "type": {
                        "type": "string",
                        "description": "工具类型，当前仅支持`function`",
                        "example": "function"
                    },
                    "function": {
                        "$ref": "#/components/schemas/Function",
                        "description": "模型需要调用的函数"
                    }
                }
            },
            "Function": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "模型需要调用的函数名称",
                        "example": "get_current_weather"
                    },
                    "arguments": {
                        "type": "string",
                        "description": "模型生成的用于调用函数的参数，JSON 格式。请注意，模型并不总是生成有效的 JSON，并且可能会虚构出一些您的函数参数规范中未定义的参数。在调用函数之前，请在您的代码中验证这些参数是否有效。",
                        "example": "{\"location\": \"Boston, MA\"}"
                    }
                }
            },
            "ChoiceLogprobs": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TokenLogprob"
                        },
                        "description": "`message`列表中每个 `content` 元素中的 token 对数概率信息"
                    }
                }
            },
            "TokenLogprob": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "当前 token",
                        "example": "The"
                    },
                    "bytes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "当前 token 的 UTF - 8 值，格式为整数列表。当一个字符由多个 token 组成（表情符号或特殊字符等）时可以用于字符的编码和解码。如果 token 没有 UTF - 8 值则为空。",
                        "example": [84, 104, 101]
                    },
                    "logprob": {
                        "type": "number",
                        "format": "float",
                        "description": "当前 token 的对数概率",
                        "example": -0.0155029296875
                    },
                    "top_logprobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopLogprob"
                        },
                        "description": "在当前 token 位置最有可能的标记及其对数概率的列表。在一些情况下，返回的数量可能比请求参数 `top_logprobs` 指定的数量要少。"
                    }
                }
            },
            "TopLogprob": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "当前 token",
                        "example": "The"
                    },
                    "bytes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "当前 token 的 UTF - 8 值，格式为整数列表。当一个字符由多个 token 组成（表情符号或特殊字符等）时可以用于字符的编码和解码。如果 token 没有 UTF - 8 值则为空。",
                        "example": [84, 104, 101]
                    },
                    "logprob": {
                        "type": "number",
                        "format": "float",
                        "description": "当前 token 的对数概率",
                        "example": -0.0155029296875
                    }
                }
            },
            "BotUsage": {
                "type": "object",
                "properties": {
                    "model_usage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelUsage"
                        },
                        "description": "本次请求不同 endpoint 的 token 消耗"
                    }
                }
            },
            "ModelUsage": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "endpoint id"
                    },
                    "prompt_tokens": {
                        "type": "integer",
                        "description": "输入的 prompt token 数量",
                        "example": 130
                    },
                    "completion_tokens": {
                        "type": "integer",
                        "description": "模型生成的 token 数量",
                        "example": 100
                    },
                    "total_tokens": {
                        "type": "integer",
                        "description": "本次请求消耗的总 token 数量（输入 + 输出）"
                    }
                }
            },
            "StreamChoice": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "description": "当前元素在 `choices` 列表的索引",
                        "example": 0
                    },
                    "finish_reason": {
                        "type": "string",
                        "description": "模型停止生成 token 的原因。可能的值包括：\n- `stop`：模型输出自然结束，或因命中请求参数 `stop` 中指定的字段而被截断\n- `length`：模型输出因达到请求参数 `max_token` 指定的最大 token 数量而被截断\n- `content_filter`：模型输出被内容审核拦截\n- `tool_call`：模型调用了工具",
                        "example": "stop"
                    },
                    "delta": {
                        "$ref": "#/components/schemas/ChoiceDelta",
                        "description": "模型输出的内容"
                    },
                    "logprobs": {
                        "$ref": "#/components/schemas/ChoiceLogprobs",
                        "description": "当前内容的对数概率信息"
                    }
                }
            },
            "ChoiceDelta": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "固定为 `assistant`",
                        "example": "assistant"
                    },
                    "content": {
                        "type": "string",
                        "description": "模型生成的消息内容，`content` 与 `tool_calls` 字段二者必有一个为非空",
                        "example": "\"你好\""
                    },
                    "tool_calls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChoiceDeltaToolCall"
                        },
                        "description": "模型生成的工具调用列表，`content` 与 `tool_calls` 字段二者必有一个为非空"
                    }
                }
            },
            "ChoiceDeltaToolCall": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "description": "当前元素在 `tool_calls` 列表的索引",
                        "example": 0
                    },
                    "id": {
                        "type": "string",
                        "description": "当前工具调用 ID",
                        "example": "call_5y**********************"
                    },
                    "type": {
                        "type": "string",
                        "description": "工具类型，当前仅支持`function`",
                        "example": "function"
                    },
                    "function": {
                        "$ref": "#/components/schemas/Function",
                        "description": "模型需要调用的函数"
                    }
                }
            }
        }
    }
}